<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jd.bdp.order.mybatis.UserDaoIface">

	<resultMap type="User" id="fixUserResult">
		<id column="user_id" property="user_id" />
		<result column="user_email" property="email" />
		<result column="user_descr" property="descr" />
		<result column="depart" property="depart" />
		<result column="user_name" property="user_name" />
		<result column="sale" property="sale" />
	</resultMap>

	<select id="selectUserByID" parameterType="int" resultMap="fixUserResult">
		select * from users where user_id = #{id}
	</select>

	<select id="mutipleSelect" resultMap="fixUserResult"
		parameterType="User">
		select * from users as u
		<where>
			<if test="depart != null and depart != 'java'">
				and u.depart = #{depart}
			</if>
			<if test="sale != null">
				and u.sale > #{sale}
			</if>
		</where>
	</select>


	<insert id="insertUserSingle" useGeneratedKeys="true" keyColumn="user_id"
		keyProperty="user_id">
		insert users(user_name,sale,depart,user_email) values
		(#{user_name},#{sale},#{depart},#{email});
	</insert>
	<!-- 如果是参数是Map类型的那么需要把Map里面设置一个KEY为list，如果不是Map直接是List也是可以的 -->
	<insert id="insertUserList" parameterType="map"
		useGeneratedKeys="true" keyColumn="user_id" keyProperty="user_id">
		insert users(user_name,sale,depart) values
		<foreach item="item" collection="list" separator=",">
			(#{item.user_name}, #{item.sale},#{item.depart})
		</foreach>
	</insert>

	<resultMap type="User" id="userWithAddress">
		<id column="user_id" property="user_id" />
		<result column="user_name" property="user_name" />
		<association property="userAddress" resultMap="userAddress"></association>
		<association property="workAddress" resultMap="userAddress"
			columnPrefix="wo_"></association>
	</resultMap>
	<resultMap type="userAddress" id="userAddress">
		<id column="address_id" property="addressId" />
		<result column="address_province" property="addressProvince" />
		<result column="adress_city" property="adressCity" />
		<result column="address_detail" property="addressDetail" />
		<result column="address_type" property="addressType" />
	</resultMap>

	<select id="getUserWithAddress" resultMap="userWithAddress">
		SELECT
		users.* , user_address.* ,
		work_.address_id as wo_address_id ,
		work_.address_province as wo_address_province,
		work_.address_city as wo_address_city,
		work_.address_detail as wo_address_detail,
		work_.address_type as wo_address_type
		FROM users
		LEFT JOIN user_address ON user_address.user_id = users.user_id
		and address_type = #{address_type}
		LEFT JOIN user_address as work_ ON
		user_address.user_id = users.user_id and work_.address_type =
		#{work_address_type}
		WHERE users.user_id = #{user_id};
	</select>

	<select id="getAddressById" resultMap="userAddress"
		parameterType="int">
		select * from user_address where address_id =
		#{address_id}
	</select>

	<resultMap type="User" id="userWithArticle">
		<id column="user_id" property="user_id" />
		<collection property="articles" resultMap="fixArticle"></collection>
	</resultMap>

	<resultMap type="article" id="fixArticle">
		<id column="article_id" property="articleId" />
		<result column="user_id" property="userId" />
		<result column="article_title" property="articleTitle" />
		<result column="article_name" property="articleName" />
		<result column="article_desc" property="articleDesc" />
	</resultMap>

	<select id="getUserWithArticle" resultMap="userWithArticle">
		SELECT * FROM users AS
		u LEFT JOIN article AS a ON a.user_id = u.user_id
		WHERE u.user_id =
		#{user_id}
	</select>


	<select id="getUserBySaleDepart" resultMap="fixUserResult">
		select * from users
		<where>
			<if test=" sale != null and sale > 0 ">
				and sale > #{sale}
			</if>
			<if test="depart != null and depart.trim().length() > 0 ">
				and depart = #{depart}
			</if>
		</where>
	</select>

	<update id="updateUsers">
		update users
		<set>
			<if test=" user.user_name != null">user_name = #{user.user_name},</if>
			<if test=" user.sale != null ">sale = #{user.sale},</if>
			<if test=" user.depart != null">depart = #{user.depart}</if>
		</set>
		where user_id = #{user_id}
	</update>

</mapper>